plugins {
    id 'java'
    id 'application'
}

group 'org.example'
version '1.0-SNAPSHOT'

ext.javaMainClass = "edk.jzero.j0"

def uniconBin = '/Users/dank/git/github/unicon/bin'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

def String parser = ""

if (project.hasProperty("parser")) {
    parser = project.findProperty("parser") ?: "java"
    println "Parser=${parser}"
}

if (project.hasProperty("args")) {
    ext.cmdargs = project.findProperty("args")
} else {
    ext.cmdargs = "Hello.java"
}

task runJava(type: JavaExec) {
    group = "Execution"
    description = "Run jzero app using ${parser}"
    classpath = sourceSets.main.runtimeClasspath
    mainClass = javaMainClass
    args cmdargs.split()
}

task uflex(type: Exec) {
    workingDir "${projectDir}"
    commandLine './scripts/uflex.sh', "${uniconBin}", "${projectDir}/src/main/jflex", "javalex", "${projectDir}/src/main/icn"
    doLast {
        println "Finished UFlex"
    }
}

task unicon(type: Exec) {
    workingDir "${projectDir}"
    commandLine './scripts/unicon.sh', "${uniconBin}", "${projectDir}/src/main/icn", "${buildDir}"
    doLast {
        println "Finished unicon"
    }
}

task jyacc(type:Exec) {
    workingDir "${projectDir}/src/main/java/edk/jzero"
    commandLine 'jyacc', '-Jclass=Parser', '-Jpackage=edk.jzero',
            '-Jyylex=edk.jzero.j0.yylex','-Jyyerror=edk.jzero.yyerror.yyerror',
            "${projectDir}/src/main/yacc/j0gram.y"
    doLast {
        println "Finished Byacc/J"
    }
}

task jflex(type: Exec) {
    workingDir "${projectDir}"
    commandLine 'jflex', 'src/main/jflex/javalex.flex', '-d', "src/main/java/edk/jzero"
    doLast {
        println "Finished JFlex"
    }
}

task printEnv {
    doLast {
        println "Root Dir: ${rootDir}"
        println "Build Dir: ${buildDir}"
        println "Project Dir: ${projectDir}"
        println "Unicon Dir: ${uniconBin}"
    }
}
